@book{shostack2014threat,
  title={Threat modeling: {Designing} for security},
  author={Shostack, Adam},
  year={2014},
  publisher={John Wiley \& Sons}
}

@book{tarandach2020threat,
  title={Threat Modeling},
  author={Tarandach, Izar and Coles, Matthew J},
  year={2020},
  publisher={O'Reilly Media, Inc.}
}

@article{chowdhury2022better,
  title={Better Call {Saltzer}\&{Schroeder}: {A} Retrospective Security Analysis of {SolarWinds}\&{Log4j}},
  author={Chowdhury, Partha Das and Tahaei, Mohammad and Rashid, Awais},
  journal={arXiv preprint arXiv:2211.02341},
  year={2022}
}

@article{mai2018modeling,
  title={Modeling security and privacy requirements: a use case-driven approach},
  author={Mai, Phu X and Goknil, Arda and Shar, Lwin Khin and Pastore, Fabrizio and Briand, Lionel C and Shaame, Shaban},
  journal={Information and Software Technology},
  volume={100},
  pages={165--182},
  year={2018},
  publisher={Elsevier}
}

@inproceedings{rashid2016discovering,
  title={Discovering ``unknown known'' security requirements},
  author={Rashid, Awais and Naqvi, Syed Asad Ali and Ramdhany, Rajiv and Edwards, Matthew and Chitchyan, Ruzanna and Babar, M Ali},
  booktitle={Proceedings of ICSE},
  pages={866--876},
  year={2016}
}

@misc{pawlik_rted_2011,
	title        = {{RTED}: A Robust Algorithm for the Tree Edit Distance},
	shorttitle   = {{RTED}},
	author       = {Pawlik, Mateusz and Augsten, Nikolaus},
	publisher    = {{arXiv}},
	number       = {{arXiv}:1201.0230},
	doi          = {10.48550/arXiv.1201.0230},
	url          = {http://arxiv.org/abs/1201.0230},
	urldate      = {2024-02-14},
	date         = {2011-12-31},
	eprinttype   = {arxiv},
	eprint       = {1201.0230 [cs]},
}
@misc{akutsu_tree_2021,
	title        = {Tree Edit Distance with Variables. Measuring the Similarity between Mathematical Formulas},
	author       = {Akutsu, Tatsuya and Mori, Tomoya and Nakamura, Naotoshi and Kozawa, Satoshi and Ueno, Yuhei and Sato, Thomas N.},
	publisher    = {{arXiv}},
	number       = {{arXiv}:2105.04802},
	url          = {http://arxiv.org/abs/2105.04802},
	urldate      = {2024-02-14},
	date         = {2021-05-11},
	eprinttype   = {arxiv},
	eprint       = {2105.04802 [cs]},
}
@inproceedings{sidorov_computing_2015,
	title        = {Computing text similarity using Tree Edit Distance},
	author       = {Sidorov, Grigori and Gomez-Adorno, Helena and Markov, Ilia and Pinto, David and Loya, Nahun},
	booktitle    = {2015 Annual Conference of the North American Fuzzy Information Processing Society ({NAFIPS}) held jointly with 2015 5th World Conference on Soft Computing ({WConSC})},
	location     = {Redmond, {WA}, {USA}},
	publisher    = {{IEEE}},
	pages        = {1--4},
	doi          = {10.1109/NAFIPS-WConSC.2015.7284129},
	isbn         = {978-1-4673-7248-0},
	url          = {http://ieeexplore.ieee.org/document/7284129/},
	urldate      = {2024-02-14},
	eventtitle   = {2015 Annual Conference of the North American Fuzzy Information Processing Society ({NAFIPS}) held jointly with 2015 5th World Conference on Soft Computing ({WConSC})},
	date         = {2015-08},
}
@article{zhang_simple_1989,
	title        = {Simple Fast Algorithms for the Editing Distance Between Trees and Related Problems},
	author       = {Zhang, Kaizhong and Shasha, Dennis},
	volume       = 18,
	pages        = {1245--1262},
	doi          = {10.1137/0218082},
	journaltitle = {{SIAM} J. Comput.},
	shortjournal = {{SIAM} J. Comput.},
	date         = {1989-12-01},
}
@article{zhang_editing_1992,
	title        = {On the editing distance between unordered labeled trees},
	author       = {Zhang, Kaizhong and Statman, Rick and Shasha, Dennis},
	volume       = 42,
	number       = 3,
	pages        = {133--139},
	doi          = {10.1016/0020-0190(92)90136-J},
	issn         = {00200190},
	url          = {https://linkinghub.elsevier.com/retrieve/pii/002001909290136J},
	urldate      = {2024-02-14},
	journaltitle = {Information Processing Letters},
	shortjournal = {Information Processing Letters},
	date         = {1992-05},
}
@article{zhangMAXSNPhardResults1994,
	title        = {Some {MAX} {SNP}-hard results concerning unordered labeled trees},
	author       = {Zhang, Kaizhong and Jiang, Tao},
	year         = 1994,
	month        = mar,
	journal      = {Information Processing Letters},
	volume       = 49,
	number       = 5,
	pages        = {249--254},
	doi          = {10.1016/0020-0190(94)90062-0},
	issn         = {0020-0190},
	url          = {https://www.sciencedirect.com/science/article/pii/0020019094900620},
	urldate      = {2024-02-16},
}
@inproceedings{jhawar_attack_2015,
	title        = {Attack Trees with Sequential Conjunction},
	author       = {Jhawar, Ravi and Kordy, Barbara and Mauw, Sjouke and Radomirović, Saša and Trujillo-Rasua, Rolando},
	booktitle    = {{ICT} Systems Security and Privacy Protection},
	location     = {Cham},
	publisher    = {Springer International Publishing},
	series       = {{IFIP} Advances in Information and Communication Technology},
	pages        = {339--353},
	doi          = {10.1007/978-3-319-18467-8_23},
	isbn         = {978-3-319-18467-8},
	editor       = {Federrath, Hannes and Gollmann, Dieter},
	date         = 2015,
}
@inproceedings{mauw_foundations_2006,
	title        = {Foundations of Attack Trees},
	author       = {Mauw, Sjouke and Oostdijk, Martijn},
	booktitle    = {Information Security and Cryptology - {ICISC} 2005},
	location     = {Berlin, Heidelberg},
	publisher    = {Springer},
	series       = {Lecture Notes in Computer Science},
	pages        = {186--198},
	doi          = {10.1007/11734727_17},
	isbn         = {978-3-540-33355-5},
	editor       = {Won, Dong Ho and Kim, Seungjoo},
	date         = 2006,
}
@article{kordy_attack-defense_2014,
	title        = {Attack-defense trees},
	author       = {Kordy, B. and Mauw, S. and Radomirovic, S. and Schweitzer, P.},
	volume       = 24,
	number       = 1,
	pages        = {55--87},
	doi          = {10.1093/logcom/exs029},
	issn         = {0955-792X, 1465-363X},
	url          = {https://academic.oup.com/logcom/article-lookup/doi/10.1093/logcom/exs029},
	urldate      = {2022-02-16},
	journaltitle = {Journal of Logic and Computation},
	shortjournal = {Journal of Logic and Computation},
	date         = {2014-02-01},
}
@inproceedings{kordy_adtool_2013,
	title        = {{ADTool}: Security Analysis with Attack–Defense Trees},
	shorttitle   = {{ADTool}},
	author       = {Kordy, Barbara and Kordy, Piotr and Mauw, Sjouke and Schweitzer, Patrick},
	booktitle    = {Quantitative Evaluation of Systems},
	location     = {Berlin, Heidelberg},
	publisher    = {Springer},
	series       = {Lecture Notes in Computer Science},
	pages        = {173--176},
	doi          = {10.1007/978-3-642-40196-1_15},
	isbn         = {978-3-642-40196-1},
	editor       = {Joshi, Kaustubh and Siegle, Markus and Stoelinga, Mariëlle and D’Argenio, Pedro R.},
	date         = 2013,
}
@inproceedings{gadyatskayaRefinementAwareGenerationAttack2017,
	title        = {Refinement-{Aware} {Generation} of {Attack} {Trees}},
	author       = {Gadyatskaya, Olga and Jhawar, Ravi and Mauw, Sjouke and Trujillo-Rasua, Rolando and Willemse, Tim A. C.},
	year         = 2017,
	booktitle    = {Security and {Trust} {Management}},
	publisher    = {Springer International Publishing},
	address      = {Cham},
	series       = {Lecture {Notes} in {Computer} {Science}},
	pages        = {164--179},
	doi          = {10.1007/978-3-319-68063-7_11},
	isbn         = {978-3-319-68063-7},
	language     = {en},
	editor       = {Livraga, Giovanni and Mitchell, Chris},
	annote       = {Extracted Annotations (4/19/2021, 5:47:01 PM)"Automatic generation of attack trees can be interpreted as model transformation." (Gadyatskaya et al 2017:164)"This reasoning is applied recursively to traverse complete attack paths." (Gadyatskaya et al 2017:165)"In fact, [VNN14] does not provide any meaning to intermediate nodes, which only serve to express how child nodes are combined, while [IPHK15, Gad15, HKT13] have intermediate nodes at the same level of abstraction as child nodes, representing actions in the system model." (Gadyatskaya et al 2017:165)Debate on whether intermediate nodes should carry meaning or not (note on p.165)"Automatic generation approaches work with concrete attacks, while manual creation of attack trees focuses on the refinement of goals into subgoals." (Gadyatskaya et al 2017:165)"Our approach utilizes a heuristic for encoding and decomposing attack traces that is based on the edge biclique problem [Pee03]." (Gadyatskaya et al 2017:166)"an attack tree defines how higher (parent) nodes are interpreted through lower (child) nodes." (Gadyatskaya et al 2017:166)"::= {\textbar} OR( t) {\textbar} AND( t) {\textbar} SAND( t). t b b t, . . . , b t, . . . , b t, . . . ," (Gadyatskaya et al 2017:166)"An expression like SAND( tn) b t1, . . . , denotes an attack tree of which the top node is labelled with action b, and which has children that have to be executed sequentially. n t1, . . . , tn" (Gadyatskaya et al 2017:166)"We define the auxiliary function to obtain the action at the root node as top follows (for SAND\vphantom{\{}\}): Δ OR,AND, top(b) = top( Δ( t)) = b. b t, . . . ," (Gadyatskaya et al 2017:167)" We say that is a subtree of t, denoted ∈ t, if = or = Δ( tn) t t t t t b, t1, . . . , and ∈ for some ∈ \{ 1, n\}, where ∈ \{ SAND\}. t ti i . . . , Δ OR,AND," (Gadyatskaya et al 2017:167)"The transition from one level in an attack tree to the next level defines a refinement. More precisely, a refinement is an expression of the form Δ( bn), where ∈ and ∈ \{ SAND\vphantom{\{}\}. That b b1, . . . , b, b1, . . . , bn Δ OR,AND, B is to say, a refinement corresponds to a tree of depth one. It follows that the set of refinements, denoted R, is a subset of the set of attack trees . In SAND particular, the refinement of the root node of an attack tree is determined by the partial function ref : R, defined by SAND ref ( Δ( tn)) = Δ(top( t1), top( tn)). b t1, . . . , b . . . , This is a partial function, since the refinement of an attack tree that consists of a single node is not defined. This function can be generalized to non-root nodes, allowing us to determine the set of all refinements that occur in an attack tree. Therefore, we define the function refs : P(R), as follows: T SAND refs(t) = ref (t ) {\textbar} ∈ ∧ ¬∃b ∈ B : = b\}. t t t" (Gadyatskaya et al 2017:168)"A refinement specification specifies which refinements should be satisfied by an attack tree. A refinement specification is simply defined as a set of refinements. Given an attack tree and a refinement specification ⊆ R, we use t ρ t ρ SAND to denote that satisfies ρ. We define satisfaction by ⇐⇒ refs(t) ⊆ ρ. t t ρ That is, a tree satisfies a refinement specification, if all refined actions in the tree also occur as refined actions in the specification." (Gadyatskaya et al 2017:169)},
}
@article{naikEvaluationPotentialAttack2022,
	title        = {An evaluation of potential attack surfaces based on attack tree modelling and risk matrix applied to self-sovereign identity},
	author       = {Naik, Nitin and Grace, Paul and Jenkins, Paul and Naik, Kshirasagar and Song, Jingping},
	year         = 2022,
	month        = sep,
	journal      = {Computers \& Security},
	volume       = 120,
	pages        = 102808,
	doi          = {10.1016/j.cose.2022.102808},
	issn         = {0167-4048},
	url          = {https://www.sciencedirect.com/science/article/pii/S0167404822002024},
	urldate      = {2024-02-29},
}
@mastersthesis{mohalaiaImplementingUserInterface2023,
	title        = {Implementing a {User} {Interface} for {Attack}-{Defense} {Tree} {WebApp} {Using} {Human}-{Computer} {Interaction} {Principles}},
	author       = {Mohalaia, M. (Marwa)},
	year         = 2023,
	url          = {https://theses.liacs.nl/2644},
	urldate      = {2024-02-29},
	language     = {en},
	type         = {Bachelor's Thesis},
	school       = {LIACS, Leiden University},
}
@mastersthesis{mezaADTLangDeclarativeLanguage2023,
	title        = {{ADTLang}: {A} {Declarative} {Language} to {Describe} {Attack} {Defense} {Trees}},
	shorttitle   = {{ADTLang}},
	author       = {Meza, Stephan Orellana},
	year         = 2023,
	url          = {https://theses.liacs.nl/2669},
	urldate      = {2024-02-29},
	type         = {Bachelor's Thesis},
	language     = {en},
	school       = {LIACS, Leiden University},
}
@article{karpatiComparingAttackTrees2014,
	title        = {Comparing attack trees and misuse cases in an industrial setting},
	author       = {Karpati, Peter and Redda, Yonathan and Opdahl, Andreas L. and Sindre, Guttorm},
	year         = 2014,
	month        = mar,
	journal      = {Information and Software Technology},
	volume       = 56,
	number       = 3,
	pages        = {294--308},
	doi          = {10.1016/j.infsof.2013.10.004},
	issn         = {09505849},
	url          = {https://linkinghub.elsevier.com/retrieve/pii/S0950584913001924},
	urldate      = {2023-08-25},
	language     = {en},
}
@inproceedings{naiakshinaConductingSecurityDeveloper2020,
	title        = {On {Conducting} {Security} {Developer} {Studies} with {CS} {Students}: {Examining} a {Password}-{Storage} {Study} with {CS} {Students}, {Freelancers}, and {Company} {Developers}},
	shorttitle   = {On {Conducting} {Security} {Developer} {Studies} with {CS} {Students}},
	author       = {Naiakshina, Alena and Danilova, Anastasia and Gerlitz, Eva and Smith, Matthew},
	year         = 2020,
	month        = apr,
	booktitle    = {Proceedings of the 2020 {CHI} {Conference} on {Human} {Factors} in {Computing} {Systems}},
	publisher    = {Association for Computing Machinery},
	address      = {New York, NY, USA},
	series       = {{CHI} '20},
	pages        = {1--13},
	doi          = {10.1145/3313831.3376791},
	isbn         = {978-1-4503-6708-0},
	url          = {https://dl.acm.org/doi/10.1145/3313831.3376791},
	urldate      = {2024-02-05},
}
@misc{hendersonZssTreeEdit,
	title        = {zss: {Tree} edit distance using the {Zhang} {Shasha} algorithm},
	shorttitle   = {zss},
	author       = {Henderson, Tim},
	url          = {https://www.github.com/timtadh/zss},
	urldate      = {2024-02-29},
	copyright    = {UNKNOWN},
}
@article{lallieReviewAttackGraph2020,
	title        = {A review of attack graph and attack tree visual syntax in cyber security},
	author       = {Lallie, Harjinder Singh and Debattista, Kurt and Bal, Jay},
	year         = 2020,
	month        = feb,
	journal      = {Computer Science Review},
	volume       = 35,
	pages        = 100219,
	doi          = {10.1016/j.cosrev.2019.100219},
	issn         = {1574-0137},
	url          = {http://www.sciencedirect.com/science/article/pii/S1574013719300772},
	urldate      = {2021-01-04},
	language     = {en},
}
@article{Akutsu_Mori_Nakamura_Kozawa_Ueno_Sato_2021,
	title        = {Tree Edit Distance with Variables. Measuring the Similarity between Mathematical Formulas},
	author       = {Akutsu, Tatsuya and Mori, Tomoya and Nakamura, Naotoshi and Kozawa, Satoshi and Ueno, Yuhei and Sato, Thomas N.},
	year         = 2021,
	month        = may,
	publisher    = {arXiv},
	number       = {arXiv:2105.04802},
	url          = {http://arxiv.org/abs/2105.04802},
	abstractnote = {In this article, we propose tree edit distance with variables, which is an extension of the tree edit distance to handle trees with variables and has a potential application to measuring the similarity between mathematical formulas, especially, those appearing in mathematical models of biological systems. We analyze the computational complexities of several variants of this new model. In particular, we show that the problem is NP-complete for ordered trees. We also show for unordered trees that the problem of deciding whether or not the distance is 0 is graph isomorphism complete but can be solved in polynomial time if the maximum outdegree of input trees is bounded by a constant. This distance model is then extended for measuring the diﬀerence/similarity between two systems of diﬀerential equations, for which results of preliminary computational experiments using biological models are provided.},
	language     = {en}
}
@article{Pawlik_Augsten_2011,
	title        = {RTED: A Robust Algorithm for the Tree Edit Distance},
	author       = {Pawlik, Mateusz and Augsten, Nikolaus},
	year         = 2011,
	month        = dec,
	publisher    = {arXiv},
	number       = {arXiv:1201.0230},
	doi          = {10.48550/arXiv.1201.0230},
	url          = {http://arxiv.org/abs/1201.0230},
	abstractnote = {We consider the classical tree edit distance between ordered labeled trees, which is defined as the minimum-cost sequence of node edit operations that transform one tree into another. The state-of-the-art solutions for the tree edit distance are not satisfactory. The main competitors in the field either have optimal worst-case complexity, but the worst case happens frequently, or they are very efficient for some tree shapes, but degenerate for others. This leads to unpredictable and often infeasible runtimes. There is no obvious way to choose between the algorithms. In this paper we present RTED, a robust tree edit distance algorithm. The asymptotic complexity of RTED is smaller or equal to the complexity of the best competitors for any input instance, i.e., RTED is both efficient and worst-case optimal. We introduce the class of LRH (Left-Right-Heavy) algorithms, which includes RTED and the fastest tree edit distance algorithms presented in literature. We prove that RTED outperforms all previously proposed LRH algorithms in terms of runtime complexity. In our experiments on synthetic and real world data we empirically evaluate our solution and compare it to the state-of-the-art.}
}
@inproceedings{Sidorov_Gomez-Adorno_Markov_Pinto_Loya_2015,
	title        = {Computing text similarity using Tree Edit Distance},
	author       = {Sidorov, Grigori and Gomez-Adorno, Helena and Markov, Ilia and Pinto, David and Loya, Nahun},
	year         = 2015,
	month        = aug,
	booktitle    = {2015 Annual Conference of the North American Fuzzy Information Processing Society (NAFIPS) held jointly with 2015 5th World Conference on Soft Computing (WConSC)},
	publisher    = {IEEE},
	address      = {Redmond, WA, USA},
	pages        = {1–4},
	doi          = {10.1109/NAFIPS-WConSC.2015.7284129},
	isbn         = {978-1-4673-7248-0},
	url          = {http://ieeexplore.ieee.org/document/7284129/},
	abstractnote = {In this paper, we propose the application of the Tree Edit Distance (TED) for calculation of similarity between syntactic n-grams for further detection of soft similarity between texts. The computation of text similarity is the basic task for many natural language processing problems, and it is an open research ﬁeld. Syntactic n-grams are text features for Vector Space Model construction extracted from dependency trees. Soft similarity is application of Vector Space Model taking into account similarity of features. First, we discuss the advantages of the application of the TED to syntactic n-grams. Then, we present a procedure based on the TED and syntactic n-grams for calculating soft similarity between texts.},
	language     = {en}
}
@article{tai_tree--tree_1979,
	title        = {The Tree-to-Tree Correction Problem},
	author       = {Tai, Kuo-Chung},
	volume       = 26,
	number       = 3,
	pages        = {422--433},
	doi          = {10.1145/322139.322143},
	journaltitle = {Journal of the {ACM}},
	date         = {1979-07-01},
}
@article{Zhang_Shasha_1989,
	title        = {Simple Fast Algorithms for the Editing Distance Between Trees and Related Problems},
	author       = {Zhang, Kaizhong and Shasha, Dennis},
	year         = 1989,
	month        = dec,
	journal      = {SIAM J. Comput.},
	volume       = 18,
	pages        = {1245–1262},
	doi          = {10.1137/0218082},
	abstractnote = {Ordered labeled trees are trees in which the left-to-right order among siblings is significant. The distance between two ordered trees is considered to be the weighted number of edit operations (insert, delete, and modify) to transform one tree to another. The problem of approximate tree matching is also considered. Specifically, algorithms are designed to answer the following kinds of questions: 1. What is the distance between two trees? 2. What is the minimum distance between T 1 and T 2 when zero or more subtrees can be removed from T 2 ? 3. Let the pruning of a tree at node n mean removing all the descendants of node n. The analogous question for prunings as for subtrees is answered. A dynamic programming algorithm is presented to solve the three questions in sequential time O(|T 1 |×|T 2 |×min(depth(T 1 ),leaves(T 1 ))×min(depth(T 2 ),leaves(T 2 ))) and space O(|T 1 |×|T 2 |) compared with O(|T 1 |×|T 2 |×(depth(T 1 )) 2 ×(depth(T 2 )) 2 ) for the best previous published algorithm due to Tai [J. Assoc. Comput. Mach. 26, 422-433 (1979; Zbl 0409.68040)]. Further, the algorithm presented here can be parallelized to give time O(|T 1 |+|T 2 |).}
}
@article{Zhang_Statman_Shasha_1992,
	title        = {On the editing distance between unordered labeled trees},
	author       = {Zhang, Kaizhong and Statman, Rick and Shasha, Dennis},
	year         = 1992,
	month        = may,
	journal      = {Information Processing Letters},
	volume       = 42,
	number       = 3,
	pages        = {133–139},
	doi          = {10.1016/0020-0190(92)90136-J},
	issn         = {00200190},
	abstractnote = {This paper considers the problem of computing the editing distance between unordered, labeled trees. We give eﬃcient polynomial-time algorithms for the case when one tree is a string or has a bounded number of leaves. By contrast, we show that the problem is N P -complete even for binary trees having a label alphabet of size two.},
	language     = {en}
}
@inproceedings{yoshino_dynamic_2013,
	title        = {A Dynamic Programming A* Algorithm for Computing Unordered Tree Edit Distance},
	author       = {Yoshino, Takuya and Higuchi, Shoichi and Hirata, Kouichi},
	booktitle    = {2013 Second {IIAI} International Conference on Advanced Applied Informatics},
	pages        = {135--140},
	doi          = {10.1109/IIAI-AAI.2013.71},
	url          = {https://ieeexplore.ieee.org/document/6630333},
	urldate      = {2024-04-03},
	eventtitle   = {2013 Second {IIAI} International Conference on Advanced Applied Informatics},
	date         = {2013-08},
}
@incollection{paasen_-algorithm_2021,
	title        = {An A*-algorithm for the Unordered Tree Edit Distance with Custom Costs},
	author       = {Paaßen, Benjamin},
	volume       = 13058,
	pages        = {364--371},
	doi          = {10.1007/978-3-030-89657-7_27},
	url          = {http://arxiv.org/abs/2108.00953},
	urldate      = {2024-02-16},
	date         = 2021,
	eprinttype   = {arxiv},
	eprint       = {2108.00953 [cs]},
}
@article{mcvicar_sumoted_2016,
	title        = {{SuMoTED}: An intuitive edit distance between rooted unordered uniquely-labelled trees},
	shorttitle   = {{SuMoTED}},
	author       = {{McVicar}, Matt and Sach, Benjamin and Mesnage, Cédric and Lijffijt, Jefrey and Spyropoulou, Eirini and De Bie, Tijl},
	volume       = 79,
	pages        = {52--59},
	doi          = {10.1016/j.patrec.2016.04.012},
	issn         = {0167-8655},
	url          = {https://www.sciencedirect.com/science/article/pii/S0167865516300642},
	urldate      = {2024-03-26},
	journaltitle = {Pattern Recognition Letters},
	shortjournal = {Pattern Recognition Letters},
	date         = {2016-08-01},
}
@article{zhang_max_1994,
	title        = {Some {MAX} {SNP}-hard results concerning unordered labeled trees},
	author       = {Zhang, Kaizhong and Jiang, Tao},
	volume       = 49,
	number       = 5,
	pages        = {249--254},
	doi          = {10.1016/0020-0190(94)90062-0},
	issn         = {0020-0190},
	url          = {https://www.sciencedirect.com/science/article/pii/0020019094900620},
	urldate      = {2024-02-16},
	journaltitle = {Information Processing Letters},
	shortjournal = {Information Processing Letters},
	date         = {1994-03-11},
}
@article{bopche_graph_2017,
	title        = {Graph similarity metrics for assessing temporal changes in attack surface of dynamic networks},
	title        = {{SuMoTED}: An intuitive edit distance between rooted unordered uniquely-labelled trees},
	shorttitle   = {{SuMoTED}},
	author       = {Bopche, Ghanshyam S. and Mehtre, Babu M.},
	author       = {{McVicar}, Matt and Sach, Benjamin and Mesnage, Cédric and Lijffijt, Jefrey and Spyropoulou, Eirini and De Bie, Tijl},
	volume       = 64,
	volume       = 79,
	pages        = {16--43},
	pages        = {52--59},
	doi          = {10.1016/j.cose.2016.09.010},
	doi          = {10.1016/j.patrec.2016.04.012},
	issn         = {0167-4048},
	issn         = {0167-8655},
	url          = {https://www.sciencedirect.com/science/article/pii/S0167404816301171},
	url          = {https://www.sciencedirect.com/science/article/pii/S0167865516300642},
	urldate      = {2024-03-07},
	urldate      = {2024-03-26},
	journaltitle = {Pattern Recognition Letters},
	shortjournal = {Pattern Recognition Letters},
	date         = {2016-08-01},
}
@article{bille_survey_2005,
	title        = {A survey on tree edit distance and related problems},
	author       = {Bille, Philip},
	volume       = 337,
	number       = 1,
	pages        = {217--239},
	doi          = {10.1016/j.tcs.2004.12.030},
	issn         = {0304-3975},
	url          = {https://www.sciencedirect.com/science/article/pii/S0304397505000174},
	urldate      = {2024-03-26},
	journaltitle = {Theoretical Computer Science},
	shortjournal = {Theoretical Computer Science},
	date         = {2005-06-09},
}
@incollection{goos_computing_1998,
	title        = {Computing the Edit-Distance Between Unrooted Ordered Trees},
	author       = {Klein, Philip N.},
	booktitle    = {Algorithms — {ESA}’ 98},
	location     = {Berlin, Heidelberg},
	publisher    = {Springer Berlin Heidelberg},
	volume       = 1461,
	pages        = {91--102},
	doi          = {10.1007/3-540-68530-8_8},
	isbn         = {978-3-540-64848-2 978-3-540-68530-2},
	url          = {http://link.springer.com/10.1007/3-540-68530-8_8},
	urldate      = {2024-03-27},
	editor       = {Bilardi, Gianfranco and Italiano, Giuseppe F. and Pietracaprina, Andrea and Pucci, Geppino},
	date         = 1998,
}
@article{fukagawa_clique-based_2011,
	title        = {A clique-based method for the edit distance between unordered trees and its application to analysis of glycan structures},
	author       = {Fukagawa, Daiji and Tamura, Takeyuki and Takasu, Atsuhiro and Tomita, Etsuji and Akutsu, Tatsuya},
	volume       = {12 Suppl 1},
	pages        = {S13},
	doi          = {10.1186/1471-2105-12-S1-S13},
	issn         = {1471-2105},
	issue        = {Suppl 1},
	journaltitle = {{BMC} bioinformatics},
	shortjournal = {{BMC} Bioinformatics},
	date         = {2011-02-15},
	pmcid        = {PMC3044267},
}


@article{schneierSecretsLiesDigital2000,
  title    = {Secrets and Lies: Digital Security in a Networked World},
  abstract = {From the Book:
              I have written this book partly to correct a mistake.
              Seven years ago I wrote another book: Applied Cryptography. In it, I described a mathematical utopia: algorithms that would keep your deepest secrets safe for millennia, protocols that could perform the most fantastical electronic interactions-unregulated gambling, undetectable authentication, anonymous cash-safely and securely. In my vision cryptography was the great technological equalizer; anyone with a cheap (and getting cheaper every year) computer could have the same security as the largest government. In the second edition of the same book, written two years later, I went so far as to write: "It is insufficient to protect ourselves with laws; we need to protect ourselves with mathematics."
              It's just not true. Cryptography can't do any of that.
              It's not that cryptography has gotten weaker since 1994, or that the things I described in that book are no longer true; it's that cryptography doesn't exist in a vacuum.
              Cryptography is a branch of mathematics. And like all mathematics, it involves numbers, equations, and logic. Security, palpable security that you or I might find useful in our lives, involves people: things people know, relationships between people, people and how they relate to machines. Digital security involves computers: complex, unstable, buggy computers.
              Mathematics is perfect; reality is subjective. Mathematics is defined; computers are ornery. Mathematics is logical; people are erratic, capricious, and barely comprehensible.
              The error of Applied Cryptography is that I didn't talk at all about the context. I talked about cryptography as if it were The Answer. I was pretty naive.
              Theresult wasn't pretty. Readers believed that cryptography was a kind of magic security dust that they could sprinkle over their software and make it secure. That they could invoke magic spells like "128-bit key" and "public-key infrastructure." A colleague once told me that the world was full of bad security systems designed by people who read Applied Cryptography.
              Since writing the book, I have made a living as a cryptography consultant: designing and analyzing security systems. To my initial surprise, I found that the weak points had nothing to do with the mathematics. They were in the hardware, the software, the networks, and the people. Beautiful pieces of mathematics were made irrelevant through bad programming, a lousy operating system, or someone's bad password choice. I learned to look beyond the cryptography, at the entire system, to find weaknesses. I started repeating a couple of sentiments you'll find throughout this book: "Security is a chain; it's only as secure as the weakest link." "Security is a process, not a product."
              Any real-world system is a complicated series of interconnections. Security must permeate the system: its components and connections. And in this book I argue that modern systems have so many components and connections-some of them not even known by the systems' designers, implementers, or users-that insecurities always remain. No system is perfect; no technology is The Answer.
              This is obvious to anyone involved in real-world security. In the real world, security involves processes. It involves preventative technologies, but also detection and reaction processes, and an entire forensics system to hunt down and prosecute the guilty. Security is not a product; it itself is a process. And if we're ever going to make our digital systems secure, we're going to have to start building processes.
              A few years ago I heard a quotation, and I am going to modify it here: If you think technology can solve your security problems, then you don't understand the problems and you don't understand the technology.
              This book is about those security problems, the limitations of technology, and the solutions.
              Read this book in order, from beginning to end.
              No, really. Many technical books are meant to skim, bounce around in, and use as a reference. This book isn't. This book has a plot; it tells a story. And like any good story, it makes less sense telling it out of order. The chapters build on each other, and you won't buy the ending if you haven't come along on the journey.
              Actually, I want you to read the book through once, and then read it through a second time. This book argues that in order to understand the security of a system, you need to look at the entire system-and not at any particular technologies. Security itself is an interconnected system, and it helps to have cursory knowledge of everything before learning more about anything. But two readings is probably too much to ask; forget I mentioned it.
              This book has three parts. Part 1 is "The Landscape," and gives context to the rest of the book: who the attackers are, what they want, and what we need to deal with the threats. Part 2 is "Technologies," basically a bunch of chapters describing different security technologies and their limitations. Part 3 is "Strategies": Given the requirements of the landscape and the limitations of the technologies, what do we do now?
              I think digital security is about the coolest thing you can work on today, and this book reflects that feeling. It's serious, but fun, too. Enjoy the read.},
  author   = {Schneier, Bruce},
  date     = {2000-08-01},
  note     = {{MAG} {ID}: 2084044852}
}

@article{schneierAttackTrees1999,
  title        = {Attack trees},
  volume       = {24},
  pages        = {21--29},
  number       = {12},
  journaltitle = {Dr. Dobb’s journal},
  author       = {Schneier, Bruce},
  date         = {1999},
  file         = {Schneier - 1999 - Attack trees.pdf:/Users/nathanschiele/Zotero/storage/TGUUZPGC/Schneier - 1999 - Attack trees.pdf:application/pdf}
}

@book{andersonSecurityEngineeringGuide2020,
  title      = {Security Engineering: A Guide to Building Dependable Distributed Systems},
  isbn       = {978-1-119-64281-7},
  shorttitle = {Security Engineering},
  abstract   = {Now that there's software in everything, how can you make anything secure? Understand how to engineer dependable systems with this newly updated classic In Security Engineering: A Guide to Building Dependable Distributed Systems, Third Edition Cambridge University professor Ross Anderson updates his classic textbook and teaches readers how to design, implement, and test systems to withstand both error and attack. This book became a best-seller in 2001 and helped establish the discipline of security engineering. By the second edition in 2008, underground dark markets had let the bad guys specialize and scale up; attacks were increasingly on users rather than on technology. The book repeated its success by showing how security engineers can focus on usability. Now the third edition brings it up to date for 2020. As people now go online from phones more than laptops, most servers are in the cloud, online advertising drives the Internet and social networks have taken over much human interaction, many patterns of crime and abuse are the same, but the methods have evolved. Ross Anderson explores what security engineering means in 2020, including:  How the basic elements of cryptography, protocols, and access control translate to the new world of phones, cloud services, social media and the Internet of Things Who the attackers are – from nation states and business competitors through criminal gangs to stalkers and playground bullies What they do – from phishing and carding through {SIM} swapping and software exploits to {DDoS} and fake news Security psychology, from privacy through ease-of-use to deception The economics of security and dependability – why companies build vulnerable systems and governments look the other way How dozens of industries went online – well or badly How to manage security and safety engineering in a world of agile development – from reliability engineering to {DevSecOps}  The third edition of Security Engineering ends with a grand challenge: sustainable security. As we build ever more software and connectivity into safety-critical durable goods like cars and medical devices, how do we design systems we can maintain and defend for decades? Or will everything in the world need monthly software upgrades, and become unsafe once they stop?},
  pagetotal  = {1232},
  publisher  = {John Wiley \& Sons},
  author     = {Anderson, Ross},
  date       = {2020-11-25},
  langid     = {english},
  note       = {Google-Books-{ID}: {wW}8LEAAAQBAJ},
  keywords   = {Computers / Networking / General, Computers / Security / General},
  file       = {Anderson_2020_Security Engineering.pdf:/Users/nathanschiele/Zotero/storage/VUIAR7TE/Anderson_2020_Security Engineering.pdf:application/pdf}
}

@article{akutsu2010tree,
  title     = {Tree edit distance problems: Algorithms and applications to bioinformatics},
  author    = {Akutsu, Tatsuya},
  journal   = {IEICE transactions on information and systems},
  volume    = {93},
  number    = {2},
  pages     = {208--218},
  year      = {2010},
  publisher = {The Institute of Electronics, Information and Communication Engineers}
}


@inproceedings{mauwFoundationsAttackTrees2006,
  location  = {Berlin, Heidelberg},
  title     = {Foundations of Attack Trees},
  isbn      = {978-3-540-33355-5},
  doi       = {10.1007/11734727_17},
  series    = {Lecture Notes in Computer Science},
  abstract  = {Attack trees have found their way to practice because they have proved to be an intuitive aid in threat analysis. Despite, or perhaps thanks to, their apparent simplicity, they have not yet been provided with an unambiguous semantics. We argue that such a formal interpretation is indispensable to precisely understand how attack trees can be manipulated during construction and analysis. We provide a denotational semantics, based on a mapping to attack suites, which abstracts from the internal structure of an attack tree, we study transformations between attack trees, and we study the attribution and projection of an attack tree.},
  pages     = {186--198},
  booktitle = {Information Security and Cryptology - {ICISC} 2005},
  publisher = {Springer},
  author    = {Mauw, Sjouke and Oostdijk, Martijn},
  editor    = {Won, Dong Ho and Kim, Seungjoo},
  date      = {2006},
  langid    = {english},
  keywords  = {attack trees, semantics, threat analysis},
  file      = {Mauw_Oostdijk_2006_Foundations of Attack Trees.pdf:/Users/nathanschiele/Zotero/storage/2ULZYG5K/Mauw_Oostdijk_2006_Foundations of Attack Trees.pdf:application/pdf}
}

@inproceedings{schiele2021novel,
  title        = {A novel approach for attack tree to attack graph transformation},
  author       = {Schiele, Nathan Daniel and Gadyatskaya, Olga},
  booktitle    = {International Conference on Risks and Security of Internet and Systems},
  pages        = {74--90},
  year         = {2021},
  organization = {Springer}
}




@article{yujianNormalizedLevenshteinDistance2007,
  title        = {A Normalized Levenshtein Distance Metric},
  volume       = {29},
  rights       = {https://ieeexplore.ieee.org/Xplorehelp/downloads/license-information/{IEEE}.html},
  issn         = {0162-8828},
  url          = {http://ieeexplore.ieee.org/document/4160958/},
  doi          = {10.1109/TPAMI.2007.1078},
  abstract     = {Although a number of normalized edit distances presented so far may offer good performance in some applications, none of them can be regarded as a genuine metric between strings because they do not satisfy the triangle inequality. Given two strings X and Y over a finite alphabet, this paper defines a new normalized edit distance between X and Y as a simple function of their lengths ({jXj} and {jY} j) and the Generalized Levenshtein Distance ({GLD}) between them. The new distance can be easily computed through {GLD} with a complexity of {OðjXj} Á {jY} {jÞ} and it is a metric valued in [0, 1] under the condition that the weight function is a metric over the set of elementary edit operations with all costs of insertions/deletions having the same weight. Experiments using the {AESA} algorithm in handwritten digit recognition show that the new distance can generally provide similar results to some other normalized edit distances and may perform slightly better if the triangle inequality is violated in a particular data set.},
  pages        = {1091--1095},
  number       = {6},
  journaltitle = {{IEEE} Transactions on Pattern Analysis and Machine Intelligence},
  shortjournal = {{IEEE} Trans. Pattern Anal. Machine Intell.},
  author       = {Yujian, Li and Bo, Liu},
  urldate      = {2024-05-21},
  date         = {2007-06},
  langid       = {english},
  file         = {Yujian and Bo - 2007 - A Normalized Levenshtein Distance Metric.pdf:/Users/nathanschiele/Zotero/storage/N8J6MFDI/Yujian and Bo - 2007 - A Normalized Levenshtein Distance Metric.pdf:application/pdf}
}

@article{masekFasterAlgorithmComputing1980,
  title        = {A faster algorithm computing string edit distances},
  volume       = {20},
  issn         = {0022-0000},
  url          = {https://www.sciencedirect.com/science/article/pii/0022000080900021},
  doi          = {10.1016/0022-0000(80)90002-1},
  abstract     = {The edit distance between two character strings can be defined as the minimum cost of a sequence of editing operations which transforms one string into the other. The operations we admit are deleting, inserting and replacing one symbol at a time, with possibly different costs for each of these operations. The problem of finding the longest common subsequence of two strings is a special case of the problem of computing edit distances. We describe an algorithm for computing the edit distance between two strings of length n and m, n ⪖ m, which requires O(n · max(1, mlog n)) steps whenever the costs of edit operations are integral multiples of a single positive real number and the alphabet for the strings is finite. These conditions are necessary for the algorithm to achieve the time bound.},
  pages        = {18--31},
  number       = {1},
  journaltitle = {Journal of Computer and System Sciences},
  shortjournal = {Journal of Computer and System Sciences},
  author       = {Masek, William J. and Paterson, Michael S.},
  urldate      = {2024-05-21},
  date         = {1980-02-01}
}

@inproceedings{naik2019cyberthreat,
  title        = {Cyberthreat Hunting-Part 1: triaging ransomware using fuzzy hashing, import hashing and YARA rules},
  author       = {Naik, Nitin and Jenkins, Paul and Savage, Nick and Yang, Longzhi},
  booktitle    = {2019 IEEE International Conference on Fuzzy Systems (FUZZ-IEEE)},
  pages        = {1--6},
  year         = {2019},
  organization = {IEEE}
}

@inproceedings{naik2020evaluating,
  title        = {Evaluating automatically generated YARA rules and enhancing their effectiveness},
  author       = {Naik, Nitin and Jenkins, Paul and Cooke, Roger and Gillett, Jonathan and Jin, Yaochu},
  booktitle    = {2020 IEEE Symposium Series on Computational Intelligence (SSCI)},
  pages        = {1146--1153},
  year         = {2020},
  organization = {IEEE}
}

@inproceedings{beham2011new,
  title        = {A new metric to measure distances between solutions to the quadratic assignment problem},
  author       = {Beham, Andreas and Pitzer, Erik and Affenzeller, Michael},
  booktitle    = {3rd IEEE International Symposium on Logistics and Industrial Informatics},
  pages        = {45--50},
  year         = {2011},
  organization = {IEEE}
}

@article{bottou1991stochastic,
  title     = {Stochastic gradient learning in neural networks},
  author    = {Bottou, L{\'e}on and others},
  journal   = {Proceedings of Neuro-N{\i}mes},
  volume    = {91},
  number    = {8},
  pages     = {12},
  year      = {1991},
  publisher = {Nimes}
}

@inproceedings{jones1995fitness,
  title     = {Fitness distance correlation as a measure of problem difficulty for genetic algorithms.},
  author    = {Jones, Terry and Forrest, Stephanie and others},
  booktitle = {ICGA},
  volume    = {95},
  pages     = {184--192},
  year      = {1995}
}